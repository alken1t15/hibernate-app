-- create table person(
--   id int PRIMARY KEY generated by default as identity,
--   name varchar(100),
--   age int
-- );
--
-- insert into Person(id, name, age) values (1,'Test person',20);

create table person(
                       id int PRIMARY KEY generated by default as identity,
                       name varchar(100) not null ,
                       age int check ( age<100 )
);


create table item(
                     id int PRIMARY KEY generated by default as identity,
                     person_id int references person (id) on delete set null ,
                     item_name varchar(100) not null
);

insert into person(name, age) values ('Tom',35);
insert into person(name, age) values ('Bob',52);
insert into person(name, age) values ('Katy',14);


insert into item(person_id, item_name) VALUES (1,'Book');
insert into item(person_id, item_name) VALUES (1,'AirPods');
insert into item(person_id, item_name) VALUES (2,'Iphone');
insert into item(person_id, item_name) VALUES (3,'Kindle');
insert into item(person_id, item_name) VALUES (3,'TV');
insert into item(person_id, item_name) VALUES (3,'PlayStation');

-- create table person(
--   id int PRIMARY KEY generated by default as identity,
--   name varchar(100) not null ,
--   age int
-- );
--
-- create table passport(
--     id int primary key generated by default AS IDENTITY ,
--   person_id int unique references person(id) on delete cascade ,
--   passport_number int not null
-- );


-- create table actor
-- (
--     id int generated by default as identity primary key,
--     name     varchar(100) not null unique,
--     age      int check ( age > 0 )
-- );
--
-- create table movie
-- (
--     id           int generated by default as identity primary key,
--     name               varchar(100) not null,
--     year_of_production int check ( year_of_production > 1900 )
-- );
--
-- create table actor_movie
-- (
--     actor_id int references actor (id),
--     movie_id int references movie (id),
--     primary key (actor_id, movie_id)
-- );